name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      IMAGE: europe-west2-docker.pkg.dev/vast-silicon-456014-j2/test-repo/test:latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    # - name: SonarQube Scan
    #   uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    # - name: SonarQube Quality Gate check
    #   id: sonarqube-quality-gate-check
    #   uses: sonarsource/sonarqube-quality-gate-action@master
    #   with:
    #       pollingTimeoutSec: 600
    #   env:
    #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #       SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

    - name: setup python 3.12
      uses: actions/setup-python@v3
      with:
         python-version: "3.12"

    - name: Install dependencies
      run: |
         python -m  pip install --upgrade pip
         pip install flake8 pytest
         if [-f requirements.txt]; then pip install -r requirements.txt; fi

    - name: Lint the flakes
      run: |
       # stop the build if there aare python errors or undefined names
       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
       # exit-zero treats all errors as warnings. The Github editor is 127 chars wide
       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: vast-silicon-456014-j2


    # - name: Configure Docker for Artifact Registry
    #   run: gcloud auth configure-docker europe-west2-docker.pkg.dev

    - name: Build and Push Docker Image
      run: |
        gcloud auth configure-docker europe-west2-docker.pkg.dev
        docker build -t $IMAGE .


    # # https://github.com/marketplace/actions/prisma-cloud-scan
    # - name: Prisma Cloud image scan
    #   id: scan
    #   uses: PaloAltoNetworks/prisma-cloud-scan@v1.5
    #   with:
    #      pcc_console_url: ${{ secrets.PCC_CONSOLE_URL }}
    #      pcc_user: ${{ secrets.PCC_USER }}
    #      pcc_pass: ${{ secrets.PCC_PASS }}
    #      image_name: $IMAGE

    #   # (Optional) for compatibility with GitHub's code scanning alerts
    # - name: Upload SARIF file
    #   if: ${{ always() }} # necessary if using failure thresholds in the image scan
    #   uses: github/codeql-action/upload-sarif@v2
    #   with:
    #     sarif_file: ${{ steps.scan.outputs.sarif_file }}

    - name: Push Docker Image
      run: |
        docker push $IMAGE

    - name: Deploy to Cloud Run
      run: |
        IMAGE=europe-west2-docker.pkg.dev/vast-silicon-456014-j2/test-repo/test:latest
        gcloud run deploy flask-app \
          --image $IMAGE \
          --region europe-west2 \
          --platform managed \
          --allow-unauthenticated
